!function(e,a){"use strict";function t(e){e.widget("singleValue",{title:"Affichage Simple",description:"Affiche une donnée",templateUrl:"{widgetsPath}/singleValue/src/view/view.html",controller:"singleValueController",controllerAs:"sv",reload:!0,resolve:{data:["singleValueService","config",function(e,a){return e.get(a)}]},edit:{controller:"singleValueEditController",controllerAs:"sv",templateUrl:"{widgetsPath}/singleValue/src/edit/edit.html"}})}function l(e,a,t,l,i){if(l){var n=this;this.data=l,n.getSeuilColor=function(){return"Sup"==n.data.config.seuilOp?n.data.config.seuilVal>n.data.principalData.data?"text-success":"text-danger":"Inf"==n.data.config.seuilOp?n.data.config.seuilVal<n.data.principalData.data?"text-success":"text-danger":"Eg"==n.data.config.seuilOp?n.data.config.seuilVal==n.data.principalData.data?"text-success":"text-danger":void 0},n.data.config.listener&&a.$on("DatTest",function(e,a){console.log(a),n.data.config.urlReplace=a[n.data.config.slaveValue],n.data.load=!0,i.get(n.data.config).then(function(e){n.data.load=!1,n.data=e})})}}function i(e,a,t){function l(){return t.columns||(t.columns=[]),t.columns}this.config=t,t.datasource={},this.getDatabase=function(){return a.get("/expert").then(function(e){return e.data})},this.addColumn=function(){l().push({})},this.removeColumn=function(e){l().splice(e,1)}}function n(e,a,t){function l(e){var a=[];return angular.forEach(e.columns,function(e,l){e.path&&a.push({title:e.title,path:t(e.path)})}),a}function i(e,a){var i={config:e,principalData:{},additionalData:[]};e.list=[];for(var n in a)e.list.push(n);if(e.root){var o=t(e.root)(a);i.principalData={desc:e.desc,data:o}}var d=l(e);return angular.forEach(d,function(e,t){var l=e.path(a);i.additionalData.push({title:e.title,data:l})}),i}function n(e){var t=e.url.replace(/:\w*/,e.urlReplace);return a.get(t).then(function(e){return e.data}).then(function(a){return i(e,a[0])})}function o(e){var a=null;return e.expert?a=d(e):e.datasource&&(e.datasource.selected&&(e.url=e.datasource.selected.url),a=n(e)),a}function d(e){return a.post(r,e).then(function(e){return e.data}).then(function(a){if(a.code){({data:a.code}),{config:e,principalData:principalData1}}return i(e,a[0])})}var r="/expert/query";return{get:o}}angular.module("adf.widget.singleValue",["adf.provider"]).config(t),t.$inject=["dashboardProvider"],angular.module("adf.widget.singleValue").run(["$templateCache",function(e){e.put("{widgetsPath}/singleValue/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><input type=checkbox ng-model=config.listener> <label>Slave</label><div ng-if=config.listener><label>Master Column</label> <input type=text ng-model=config.slaveValue><hr></div><div><label>Donnée</label></div><div class=form-group><label class=sr-only for=sample>Principal Data</label><select ng-model=config.root class=form-control><option ng-repeat="el in config.list" value={{el}}>{{el}}</option></select></div><div class=form-group><label for=desc>Label</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder="Entrer la description de la donnée"></div><hr><label>Formatage</label><div><input id=percent type=radio ng-model=config.format value=percent> <label for=percent>Pourcentage</label> <input id=custom type=radio ng-model=config.format value=custom> <label for=custom>Custom</label></div><div ng-if="config.format == \'custom\'"><div class=row><div class=col-md-6><label>Prefix</label> <input type=text ng-model=config.custom.prepend></div><div class=col-md-6><label>Suffixe</label> <input type=text ng-model=config.custom.append></div></div></div><label>Seuil</label><div class="form-inline padding-bottom"><select ng-model=config.seuilOp><option value=Sup>Sup</option><option value=Inf>Inf</option><option value=Eg>Eg</option></select><input type=text ng-model=config.seuilVal></div></form>'),e.put("{widgetsPath}/singleValue/src/view/view.html",'<div><div ng-hide=sv.data class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=!sv.data.load><div class="text-center col-md-12"><h3 style="word-wrap: break-word" ng-class=sv.getSeuilColor()><span ng-if="sv.data.config.format == \'custom\'">{{sv.data.config.custom.prepend}}</span> {{sv.data.principalData.data}} <span ng-if="sv.data.config.format == \'percent\'">%</span> <span ng-if="sv.data.config.format == \'custom\'">{{sv.data.config.custom.append}}</span></h3><p class="text-center small">{{sv.data.principalData.desc}}</p></div><ul class="list-inline text-center"><li ng-repeat="addData in sv.data.additionalData">{{addData.title}} : {{addData.data}}</li></ul></div><div ng-hide=!sv.data.load class=text-center><i class="fa fa-spinner fa-pulse fa-3x" aria-hidden=true></i></div></div>')}]),angular.module("adf.widget.singleValue").controller("singleValueController",l),l.$inject=["$rootScope","$scope","$timeout","data","singleValueService"],angular.module("adf.widget.singleValue").controller("singleValueEditController",i),i.$inject=["$scope","$http","config"],angular.module("adf.widget.singleValue").service("singleValueService",n),n.$inject=["$q","$http","$parse"]}(window);