!function(e,l){"use strict";function a(e){e.widget("gaugeChart",{title:"Compteur",description:"Widget permettant l'affichage d'un compteur",templateUrl:"{widgetsPath}/gaugeChart/src/view/view.html",controller:"gaugeChartController",controllerAs:"graph",reload:!0,resolve:{data:["gaugeChartService","config",function(e,l){return e.get(l)}]},edit:{controller:"gaugeChartEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/gaugeChart/src/edit/edit.html"}})}function o(e,l,a){function o(e,l){var o=[];return angular.forEach(e.columns,function(e,t){if(e.title&&e.path){var i=e.title.replace(/_/," ");i=i.replace(/^bool/,""),l.headers[t]=e.title,o.push({title:e.title,path:a(e.path)})}}),o}function t(e,l){var t={headers:[],rows:[]};if(!e.columns){e.columns=[];for(var i in l[0])e.columns.push({title:i,path:i})}var n=l;e.rootData&&(n=a(e.rootData)(l));var r=o(e,t);return angular.forEach(n,function(e){var l=[];angular.forEach(r,function(a,o){var t=a.path(e);l[o]=t}),t.rows.push(l)}),t.totalItems=t.rows.length,t.columns=e.columns,t}function i(e){console.log(e);var a=e.modal.url.replace(/:\w+/,e.urlReplace);return l.get(a).then(function(e){return e.data}).then(function(l){return t(e.modal,l)})}function n(e){var a="/expert/query";return e.modal.expertReplace=e.expertReplace,l.post(a,e.modal).then(function(e){return console.error(e),e.data}).then(function(l){return t(e.modal,l)})}function r(e){var l=null;return"exp"==e.modal.modalMode?l=n(e):(e.modal.modalMode="easy")&&(e.modal.datasource.selected&&(e.modal.url=e.modal.datasource.selected.url),l=i(e)),l}return{get:r}}function t(e){var l=this;this.data=e,this.sortIndex=function(e){return l.reverseSort=!l.reverseSort,l.orderField=e},this.sorter=function(e){return e[l.orderField]}}function i(e,l,a,o,t){if(l){var i=this;this.config=l.config,this.label=l.config.label,this.value=l.value,this.valDetail=l.valDetail,this.maxDetail=l.maxDetail,this.desc=l.desc,i.config.colorFg||(i.config.colorFg="#009688"),i.config.colorBg||(i.config.colorBg="rgba(0,0,0,0.1)"),i.config.seuil&&(i.seuil={},i.config.seuil.forEach(function(e){i.seuil[e.val]={color:e.color}})),i.valDetail&&i.maxDetail&&(console.log("here"),i.label=i.valDetail+" / "+i.maxDetail),console.log(i.label),l.config.listener&&e.$on("DatTest",function(e,o){i.config.expertReplace=o,i.config.urlReplace=o[i.config.slaveValue],i.load=!0,a.get(i.config).then(function(e){i.load=!1,i.label=e.label,i.value=e.value,i.valDetail=l.valDetail,i.maxDetail=l.maxDetail})}),i.open=function(){if(!i.config.master&&!i.config.modal)return void console.error(i.config);if(i.config.expertReplace)var e=i.config.expertReplace;else var e={};if(i.config.colToPop&&i.config.colToPop.forEach(function(a){e[a.name]=l.jsonData[a.name]}),i.config.master)return void o.$broadcast("DatTest",e);if(i.config.modal){t.open({templateUrl:"{widgetsPath}/gaugeChart/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",resolve:{data:["modalServicePC",function(e){return e.get(i.config)}]}})}}}}function n(e,l,a,o){function t(){return a.colToPop||(a.colToPop=[]),a.colToPop}var i=this;this.config=a,a.datasource={},this.addSeuil=function(){i.config.seuil||(i.config.seuil=[]),i.config.seuil.push({})},this.removeSeuil=function(e){i.config.seuil.splice(e,1)},this.addColToPop=function(){t().push({})},this.removeColToPop=function(e){t().splice(e,1)}}function r(e,l,a){function o(e,l){var o;l.key=[];for(var t in e[0])l.key.push(t);return l.key.indexOf("max")&&(console.log("key"),l.max=e[0].max),l.valDetail&&(s=e[0][l.valDetail]),l.maxDetail&&(g=e[0][l.maxDetail]),l.label||(l.label=l.key[0]),o=a(l.label),d=e[0][l.label],{config:l,value:d,valDetail:s,maxDetail:g,jsonData:e}}function t(e){var a=e.url.replace(/:\w*/,e.urlReplace);return l.get(a).then(function(e){return e.data}).then(function(l){return o(l,e)})}function i(e){var l=null;return"exp"==e.mode?l=n(e,r):"std"==e.mode?l=n(e,c):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),l=t(e)),l}function n(e,a){return l.post(a,e).then(function(e){return e.data}).then(function(l){return o(l,e)})}var r="/expert/query",c="/standard/graph",d=null,s=null,g=null;return{get:i}}angular.module("adf.widget.gaugeChart",["adf.provider"]).config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.gaugeChart").run(["$templateCache",function(e){e.put("{widgetsPath}/gaugeChart/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div><label>Description</label></div><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder=Description></div><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Configuration du Graph</label></div><input ng-if="config.mode == \'easy\'" id=listener type=checkbox ng-model=config.listener> <label ng-if="config.mode == \'easy\'" for=listener>Slave</label> <input type=checkbox id=master ng-model=config.master> <label for=master>Master</label><div ng-if=config.listener><label>Master Column</label> <input type=text ng-model=config.slaveValue></div><div><label>Type de Graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=arch>Arch</option><option value=semi>Semi</option><option value=full>Full</option></select></div><div><label>Label (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><label for=append>Unité</label> <input type=text class=form-control id=append ng-model=config.append placeholder="GB, Mo, etc..."> <label for=min>Valeur Minimum</label> <input type=text class=form-control id=min ng-model=config.min placeholder=0> <label for=max>Valeur Maximum</label> <input type=text class=form-control id=max ng-model=config.max placeholder=100> <label for=detail>Afficher les valeurs</label> <input type=checkbox ng-model=detail id=detail><div class=row ng-if=detail><div class=col-md-6><label class=ctm-label for=val>Valeur Actuelle</label> <input type=text id=val class=form-control ng-model=config.valDetail placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div class=col-md-6><label class=ctm-label for=max>Valeur Maximum</label> <input type=text id=max class=form-control ng-model=config.maxDetail placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div></div><div><label>Couleur</label></div><div class=row><div class=col-md-6><label class=ctm-label for=cfg>Remplissage</label><color-picker id=cfg ng-model=config.colorFg options="{required : false, format : \'rgb\'}"></color-picker></div><div class=col-md-6><label class=ctm-label for=cbg>Background</label><color-picker id=cbg ng-model=config.colorBg options="{required : false, format : \'rgb\'}"></color-picker></div></div><div><label ng-click="isCollapsed2 = !isCollapsed2">Seuil <span ng-hide=isCollapsed2 class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed2 class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed2><div class=row ng-repeat="val in graph.config.seuil"><div class=col-md-6><label class=ctm-label>Valeur Minimal</label> <input type=text ng-model=val.val></div><div class=col-md-6><label class=ctm-label>Couleur</label><color-picker ng-model=val.color options="{required : false, format : \'rgb\'}"></color-picker></div><div><button type=button class="btn btn-warning" ng-click=graph.removeSeuil($index)><i class="fa fa-minus"></i> Remove</button></div><hr></div><button type=button class="btn btn-primary" ng-click=graph.addSeuil()><i class="fa fa-plus"></i> Add</button></div></div><div><label ng-click="isCollapsed3 = !isCollapsed3">Paramètre Optionnel <span ng-hide=isCollapsed3 class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed3 class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed3><div><label for=field>Column to populate</label></div><div class="form-inline padding-bottom" ng-repeat="c in graph.config.colToPop"><div class=form-group><input type=text id=field autocomplete=off uib-typeahead="key for key in config.key" typeahead-min-length=0 ng-model=c.name></div><button type=button class="btn btn-warning" ng-click=graph.removeColToPop($index)><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=graph.addColToPop()><i class="fa fa-plus"></i> Add</button><hr><div><label>Modal Configuration</label></div><modal-config config=config.modal></modal-config></div></form>'),e.put("{widgetsPath}/gaugeChart/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/gaugeChart/src/view/view.html",'<div><div ng-hide=graph.value class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.value><div class=text-center><ng-gauge type={{graph.config.type}} thick=5 value=graph.value cap=round label={{graph.label}} append={{graph.config.append}} min=graph.config.min max=graph.config.max foreground-color={{graph.config.colorFg}} background-color={{graph.config.colorBg}} thresholds=graph.seuil ng-click=graph.open() ng-class="{click : graph.config.master || graph.config.modal}"></ng-gauge></div><div class=text-center><p>{{graph.config.desc}}</p></div></div></div>')}]),angular.module("adf.widget.pieChart").service("modalServicePC",o),o.$inject=["$q","$http","$parse"],angular.module("adf.widget.pieChart").controller("modalInstanceCtrl",t),t.$inject=["data"],angular.module("adf.widget.gaugeChart").controller("gaugeChartController",i),i.$inject=["$scope","data","gaugeChartService","$rootScope","$uibModal"],angular.module("adf.widget.gaugeChart").controller("gaugeChartEditController",n),n.$inject=["$scope","$http","config","gaugeChartService"],angular.module("adf.widget.gaugeChart").service("gaugeChartService",r),r.$inject=["$q","$http","$parse"]}(window);