!function(e,o){"use strict";function t(e){e.widget("pieChart",{title:"Camembert",description:"Widget permettant l'affichage de Camembert",templateUrl:"{widgetsPath}/pieChart/src/view/view.html",controller:"pieChartController",controllerAs:"graph",reload:!0,resolve:{data:["pieChartService","config",function(e,o){return e.get(o)}]},edit:{controller:"pieChartEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/pieChart/src/edit/edit.html"}})}function a(o,t,a,i,l){if(t){var n=this;if(this.config=t.config,this.label=t.label,this.series=t.series,this.config.colorLabel=this.label,this.value=t.value,this.type=t.type,this.desc=t.desc,this.id=Math.random().toString(36).substr(2,10),console.log(this.id),n.options={chart:{type:"pie",backgroundColor:"transparent",margin:0,marginBottom:45,height:"100%"},tooltip:{pointFormat:"{point.name}: <i>{point.y}</i> - <b>{point.percentage:.1f}%</b>"},plotOptions:{pie:{size:"100%",slicedOffset:5,borderWidth:3,allowPointSelect:!0,depth:45,dataLabels:{enabled:!1}},series:{borderColor:"transparent",borderWidth:5,states:{hover:{halo:!1}}}},series:[{type:"pie",data:n.series}],title:{text:null},legend:{floating:!0,verticalAlign:"bottom",align:"center",itemStyle:{color:"#337AB7"}},credits:{enabled:!1}},"doughnut"==this.type&&(this.options.plotOptions.pie.innerSize="75%"),this.config.legend&&(this.options.plotOptions.pie.showInLegend={enabled:!0}),this.config.v3d&&(n.options.chart.options3d={enabled:!0,alpha:45,beta:0}),n.config.color){n.color=[];for(var r in n.config.color)n.color[r]=n.config.color[r];n.options.plotOptions.pie.colors=n.color}(n.config.pourcent||n.config.pieValue)&&(n.options.plotOptions.pie.dataLabels={enabled:!0,distance:-20,formatter:function(){var e="";return 0!=this.percentage&&(n.config.pourcent&&(e+=this.percentage.toFixed(1)+"%"),n.config.pieValue&&(e+=" "+this.y)),e}}),t.config.listener&&i.$on("DatTest",function(e,o){n.config.expertReplace=o,n.config.urlReplace=o[n.config.slaveValue],n.load=!0,a.get(n.config).then(function(e){n.load=!1,n.label=e.label,n.value=e.value,n.chart.series[0].setData(e.series)})}),this["export"]=function(o){if(n.chart.chart.canvas.msToBlob){var t=n.chart.chart.canvas.msToBlob();e.navigator.msSaveBlob(t,"graph.png")}else{var a=n.chart.toBase64Image();a=a.replace("image/png","image/octet-stream"),o.currentTarget.href=a,o.currentTarget.download="graph.png"}},this.open=function(e){var o=angular.copy(n.config);o.condition.group.rules.push({condition:"=",field:n.config.columnStandard,data:e});l.open({templateUrl:"{widgetsPath}/pieChart/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",size:"lg",windowClass:"my-modal",resolve:{data:["modalServicePC",function(e){return e.fetch(o)}]}})},"std"==n.config.mode&&(n.options.plotOptions.series={cursor:"pointer",events:{click:function(e){n.open(this.name)}}}),angular.element(document).ready(function(){n.chart=Highcharts.chart(n.id,n.options)})}}function i(e,o,t){function a(e,o){var a=[];return angular.forEach(e.columns,function(e,i){if(e.title&&e.path){var l=e.title.replace(/_/," ");l=l.replace(/^bool/,""),o.headers[i]=e.title,a.push({title:e.title,path:t(e.path)})}}),a}function i(e,o){var i={headers:[],rows:[]};if(!e.columns){e.columns=[];for(var l in o[0])e.columns.push({title:l,path:l})}var n=o;e.rootData&&(n=t(e.rootData)(o));var r=a(e,i);return angular.forEach(n,function(e){var o=[];angular.forEach(r,function(t,a){var i=t.path(e);o[a]=i}),i.rows.push(o)}),i.totalItems=i.rows.length,i.columns=e.columns,e.condition.group.rules.pop(),i}function l(e){return o.post("/standard",e).then(function(e){return e.data}).then(function(o){return i(e,o)})}return{fetch:l}}function l(e){var o=this;this.data=e,this.sortIndex=function(e){return o.reverseSort=!o.reverseSort,o.orderField=e},this.sorter=function(e){return e[o.orderField]}}function n(e,o,t,a){function i(e){l.config.principalCol=[],l.config.otherCol=[],e.forEach(function(e){"principal"==e.type?l.config.principalCol.push(e):l.config.otherCol.push(e)})}var l=this;this.config=t,t.datasource={},l.config.principalCol||(l.config.principalCol=[]),l.config.otherCol||(l.config.otherCol=[]),t.condition||(t.condition={group:{operator:"AND",rules:[]}}),t.condition2||(t.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return o.get("/standard").then(function(e){return e.data})},this.getColumns=function(e){return o.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){i(e),l.column=e})}}function r(e,o,t){function a(e,o){var a,i;o.key=[];for(var l in e[0])o.key.push(l);return o.label||(o.label=o.key[0]),o.value||(o.value=o.key[1]),a=t(o.label),i=t(o.value),p=e.map(function(e){return{name:a(e),y:i(e),sliced:o.sliced}}),console.log(p),d=e.map(function(e){return a(e)}),s=e.map(function(e){return i(e)}),{config:o,label:d,value:s,type:o.type,desc:o.desc,series:p}}function i(e){var t=e.url.replace(/:\w*/,e.urlReplace);return o.get(t).then(function(e){return e.data}).then(function(o){return a(o,e)})}function l(e){var o=null;return"exp"==e.mode?o=n(e,r):"std"==e.mode?o=n(e,c):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),o=i(e)),o}function n(e,t){return o.post(t,e).then(function(e){return e.data}).then(function(o){return a(o,e)})}var r="/expert/query",c="/standard/graph",d=[],s=[],p=[];return{get:l}}angular.module("adf.widget.pieChart",["adf.provider"]).config(t),t.$inject=["dashboardProvider"],angular.module("adf.widget.pieChart").run(["$templateCache",function(e){e.put("{widgetsPath}/pieChart/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div><label>Description</label></div><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder=Description></div><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in graph.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=graph.getColumns(config.databaseStandard)></div><div class=form-group><label for=sample>Label</label> <input id=sample type=text class=form-control ng-model=config.columnStandard autocomplete=off uib-typeahead="col as col.name for col in graph.column" typeahead-min-length=0></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>Choix des caractéristique secondaires</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div><showsql type=pie config=config></showsql></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Configuration du Graph</label></div><input ng-if="config.mode == \'easy\' || \'expert\'" id=listener type=checkbox ng-model=config.listener> <label ng-if="config.mode == \'easy\' || \'expert\'" for=listener>Slave</label><div ng-if=config.listener><label>Master Column</label> <input type=text ng-model=config.slaveValue></div><div><label>Type de Graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=pie>Camenbert</option><option value=polarArea>PolarArea</option><option value=doughnut>Doughnut</option></select></div><div><label>Label (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label>Value (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=value>Value</label> <input type=text id=value class=form-control ng-model=config.value placeholder=Données uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><div><input type=checkbox ng-model=config.legend id=legend> <label for=legend>Legende</label></div><div><input type=checkbox ng-model=config.pourcent id=pouc> <label for=pouc>Afficher les pourcentages sur le Graph</label></div><div><input type=checkbox ng-model=config.pieValue id=pieValue> <label for=pieValue>Afficher la valeur sur le Graph</label></div><div><input type=checkbox ng-model=config.sliced id=sliced> <label for=sliced>Sliced Graph</label></div><div><input type=checkbox ng-model=config.v3d id=v3d> <label for=v3d>3D</label></div><label>Choix des Couleurs</label><div ng-repeat="l in config.colorLabel" ng-if="config.colorLabel && $index % 2 == 0" class=row><div class=col-md-6><label for=color>{{l}} :</label><color-picker ng-model=config.color[$index] options="{required : false, format : \'hexString\'}"></color-picker></div><div class=col-md-6 ng-if="config.colorLabel.length > $index +1"><label for=color>{{config.colorLabel[$index +1]}} :</label><color-picker ng-model=config.color[$index+1] options="{required : false, format : \'hexString\'}"></color-picker></div></div></div></form>'),e.put("{widgetsPath}/pieChart/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/pieChart/src/view/view.html",'<div><div ng-hide=graph.label class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.label><div><div id={{graph.id}} ng-class="{click : graph.config.mode == \'std\'}"></div></div><div><p class=text-center>{{graph.desc}}</p></div><my-export chart=graph.chart></my-export><button type=button class="btn btn-success" ng-csv=graph.value csv-header=graph.label field-separator=; filename="{{$parent.model.title + \'.csv\'}}"><i class="fa fa-file-excel-o" aria-hidden=true></i></button></div></div>')}]),angular.module("adf.widget.pieChart").controller("pieChartController",a),a.$inject=["$scope","data","pieChartService","$rootScope","$uibModal"],angular.module("adf.widget.pieChart").service("modalServicePC",i),i.$inject=["$q","$http","$parse"],angular.module("adf.widget.pieChart").controller("modalInstanceCtrl",l),l.$inject=["data"],angular.module("adf.widget.pieChart").controller("pieChartEditController",n),n.$inject=["$scope","$http","config","pieChartService"],angular.module("adf.widget.pieChart").service("pieChartService",r),r.$inject=["$q","$http","$parse"]}(window);