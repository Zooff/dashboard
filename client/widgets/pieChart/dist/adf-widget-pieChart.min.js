!function(e,t){"use strict";function a(e){e.widget("pieChart",{title:"Camembert",description:"Widget permettant l'affichage de Camembert",templateUrl:"{widgetsPath}/pieChart/src/view/view.html",controller:"pieChartController",controllerAs:"graph",reload:!0,resolve:{data:["pieChartService","config",function(e,t){return e.get(t)}]},edit:{controller:"pieChartEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/pieChart/src/edit/edit.html"}})}function o(t,a,o,i,l){if(a){var n=this;this.config=a.config,this.label=a.label,this.value=a.value,this.type=a.type,this.desc=a.desc;var r;r="doughnut"==this.type?75:0,this.options={elements:{arc:{borderWidth:1,borderColor:"#222222"}},cutoutPercentage:r},this.config.legend&&(this.options.legend={display:!0,position:this.config.legendPosition}),"polarArea"!=this.config.type&&(this.config.pourcent||this.config.pieValue)&&(n.options.animation={},n.options.animation.onComplete=function(){var e=this.chart.ctx;e.font=Chart.helpers.fontString(20,"normal",Chart.defaults.global.defaultFontFamily),e.textAlign="center",e.textBaseline="bottom",this.data.datasets.forEach(function(t){for(var a=0;a<t.data.length;a++){var o=t._meta[Object.keys(t._meta)[0]].data[a]._model,i=t._meta[Object.keys(t._meta)[0]].total,l=o.innerRadius+(o.outerRadius-o.innerRadius)/2,r=o.startAngle,c=o.endAngle,d=r+(c-r)/2,s=l*Math.cos(d),p=l*Math.sin(d);e.fillStyle="#fff";var u=t.data[a],g=String(Math.round(u/i*100)+"%");o.circumference>0&&0!=u&&(n.config.pieValue&&e.fillText(t.data[a],o.x+s,o.y+p-5),n.config.pourcent&&e.fillText(g,o.x+s,o.y+p+15))}})}),a.config.listener&&i.$on("DatTest",function(e,t){n.config.urlReplace=t,n.load=!0,o.get(n.config).then(function(e){n.load=!1,n.label=e.label,n.value=e.value})}),t.$on("chart-create",function(e,t){n.chart=t}),this["export"]=function(t){if(n.chart.chart.canvas.msToBlob){var a=n.chart.chart.canvas.msToBlob();e.navigator.msSaveBlob(a,"graph.png")}else{var o=n.chart.toBase64Image();o=o.replace("image/png","image/octet-stream"),t.currentTarget.href=o,t.currentTarget.download="graph.png"}},this.open=function(e,t){if("std"==n.config.mode){var a=angular.copy(n.config);a.condition.group.rules.push({condition:"=",field:n.config.columnStandard,data:e[0]._model.label});l.open({templateUrl:"{widgetsPath}/pieChart/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",size:"lg",windowClass:"my-modal",resolve:{data:["modalServicePC",function(e){return e.fetch(a)}]}})}}}}function i(e,t,a){function o(e,t){var o=[];return angular.forEach(e.columns,function(e,i){if(e.title&&e.path){var l=e.title.replace(/_/," ");l=l.replace(/^bool/,""),t.headers[i]=e.title,o.push({title:e.title,path:a(e.path)})}}),o}function i(e,t){var i={headers:[],rows:[]};if(!e.columns){e.columns=[];for(var l in t[0])e.columns.push({title:l,path:l})}var n=t;e.rootData&&(n=a(e.rootData)(t));var r=o(e,i);return angular.forEach(n,function(e){var t=[];angular.forEach(r,function(a,o){var i=a.path(e);t[o]=i}),i.rows.push(t)}),i.totalItems=i.rows.length,i.columns=e.columns,e.condition.group.rules.pop(),i}function l(e){return t.post("/standard",e).then(function(e){return e.data}).then(function(t){return i(e,t)})}return{fetch:l}}function l(e){var t=this;this.data=e,this.sortIndex=function(e){return t.reverseSort=!t.reverseSort,t.orderField=e},this.sorter=function(e){return e[t.orderField]}}function n(e,t,a,o){function i(e){l.config.principalCol=[],l.config.otherCol=[],e.forEach(function(e){"principal"==e.type?l.config.principalCol.push(e):l.config.otherCol.push(e)})}var l=this;this.config=a,a.datasource={},l.config.principalCol||(l.config.principalCol=[]),l.config.otherCol||(l.config.otherCol=[]),a.condition||(a.condition={group:{operator:"AND",rules:[]}}),a.condition2||(a.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return t.get("/standard").then(function(e){return e.data})},this.getColumns=function(e){return t.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){i(e),l.column=e})}}function r(e,t,a){function o(e,t){var o,i;t.key=[];for(var l in e[0])t.key.push(l);return t.label||(t.label=t.key[0]),t.value||(t.value=t.key[1]),o=a(t.label),i=a(t.value),d=e.map(function(e){return o(e)}),s=e.map(function(e){return i(e)}),{config:t,label:d,value:s,type:t.type,desc:t.desc}}function i(e){var a=e.url.replace(/:\w*/,e.urlReplace);return t.get(a).then(function(e){return e.data}).then(function(t){return o(t,e)})}function l(e){var t=null;return"exp"==e.mode?t=n(e,r):"std"==e.mode?t=n(e,c):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),t=i(e)),t}function n(e,a){return t.post(a,e).then(function(e){return e.data}).then(function(t){return o(t,e)})}var r="/expert/query",c="/standard/graph",d=[],s=[];return{get:l}}angular.module("adf.widget.pieChart",["adf.provider"]).config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.pieChart").run(["$templateCache",function(e){e.put("{widgetsPath}/pieChart/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div><label>Description</label></div><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder=Description></div><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in graph.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=graph.getColumns(config.databaseStandard)></div><div class=form-group><label for=sample>Label</label> <input id=sample type=text class=form-control ng-model=config.columnStandard autocomplete=off uib-typeahead="col as col.name for col in graph.column" typeahead-min-length=0></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Configuration du Graph</label></div><input ng-if="config.mode == \'easy\'" id=listener type=checkbox ng-model=config.listener> <label ng-if="config.mode == \'easy\'" for=listener>Slave</label><div><label>Type de Graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=pie>Camenbert</option><option value=polarArea>PolarArea</option><option value=doughnut>Doughnut</option></select></div><div><label>Label (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label>Value (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=value>Value</label> <input type=text id=value class=form-control ng-model=config.value placeholder=Données uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><div><input type=checkbox ng-model=config.legend id=legend> <label for=legend>Legende</label></div><div><label>Position de la Legende</label></div><select ng-model=config.legendPosition><option value=top selected>Haut</option><option value=bottom>Bas</option><option value=left>Gauche</option><option value=right>Droite</option></select><div><input type=checkbox ng-model=config.pourcent id=pouc> <label for=pouc>Afficher les pourcentages sur le Graph</label></div><div><input type=checkbox ng-model=config.pieValue id=pieValue> <label for=pieValue>Afficher la valeur sur le Graph</label></div></div></form>'),e.put("{widgetsPath}/pieChart/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/pieChart/src/view/view.html",'<div><div ng-hide=graph.label class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.label>{{config.urlReplace}}<div><canvas id=graph class=chart-base ng-class="{click : graph.config.mode == \'std\'}" chart-type=graph.type chart-data=graph.value chart-labels=graph.label chart-options=graph.options chart-click=graph.open></canvas></div><div><p class=text-center>{{graph.desc}}</p></div><a type=button ng-click=graph.export($event)><button type=button class="btn btn-info"><i class="fa fa-file-image-o" aria-hidden=true></i> Export</button></a></div></div>')}]),angular.module("adf.widget.pieChart").controller("pieChartController",o),o.$inject=["$scope","data","pieChartService","$rootScope","$uibModal"],angular.module("adf.widget.pieChart").service("modalServicePC",i),i.$inject=["$q","$http","$parse"],angular.module("adf.widget.pieChart").controller("modalInstanceCtrl",l),l.$inject=["data"],angular.module("adf.widget.pieChart").controller("pieChartEditController",n),n.$inject=["$scope","$http","config","pieChartService"],angular.module("adf.widget.pieChart").service("pieChartService",r),r.$inject=["$q","$http","$parse"]}(window);