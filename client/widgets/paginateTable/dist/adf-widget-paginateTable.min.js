!function(e,t){"use strict";function a(e){e.widget("paginateTable",{title:"Tableau Paginé",description:"Widget permettant d'afficher un tableau paginé",templateUrl:"{widgetsPath}/paginateTable/src/view/view.html",controller:"paginateTableController",controllerAs:"pt",reload:!0,resolve:{data:["paginateTableService","config",function(e,t){return e.get(t)}]},edit:{controller:"paginateTableEditController",controllerAs:"pt",templateUrl:"{widgetsPath}/paginateTable/src/edit/edit.html"}})}function l(e,t,a,l,n){var o=this;o.load=!1,a&&(this.data=a,this.data.currentPage=1,this.data.maxSize=5,this.orderField=0,this.reverseSort=!1,this.sortIndex=function(e){return o.reverseSort=!o.reverseSort,o.orderField=e},this.sorter=function(e){return e[o.orderField].value},o.getData=function(){return o.data.rows},o.getHeader=function(){return o.data.headers},o.data.config.listener&&e.$on("DatTest",function(e,t){o.data.config.urlReplace=t,o.load=!0,n.get(o.data.config).then(function(e){o.load=!1,o.data=e.data})}),o.open=function(e){console.log(e);var a=e.find(function(e){return e.title==o.data.config.modalField}).value;if(o.data.config.master)return void t.$broadcast("DatTest",a);if(o.data.config.modalDatasource&&(o.data.config.modalUrl=o.data.config.modalDatasource.selected.url),o.data.config.modalUrl){o.data.config.urlReplace=a;l.open({templateUrl:"{widgetsPath}/paginateTable/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",resolve:{data:["modalService",function(e){return e.get(o.data.config)}]}})}})}function n(e,t,a){function l(e,t){var l=[];return angular.forEach(e.modalColumns,function(e,n){e.title&&e.path&&(t.headers[n]=e.title,l.push({title:e.title,path:a(e.path)}))}),l}function n(e,t){var n={headers:[],rows:[]};if(!e.modalColumns){e.modalColumns=[];for(var o in t[0])e.modalColumns.push({title:o,path:o})}var i=t;e.rootData&&(i=a(e.rootData)(t));var r=l(e,n);return angular.forEach(i,function(e){var t=[];angular.forEach(r,function(a,l){var n=a.path(e);t[l]=n}),n.rows.push(t)}),n.totalItems=n.rows.length,n.columns=e.columns,n}function o(e){var a=e.modalUrl.replace(/:\w*/,e.urlReplace);return t.get(a).then(function(e){return e.data}).then(function(t){return n(e,t)})}function i(e){var t=null;return e.modalDatasource&&(e.modalDatasource.selected&&(e.modalUrl=e.modalDatasource.selected.url),t=o(e)),t}return{get:i}}function o(e){var t=this;this.data=e,this.sortIndex=function(e){return t.reverseSort=!t.reverseSort,t.orderField=e},this.sorter=function(e){return e[t.orderField]}}function i(e,t,a){function l(e){o.config.principalCol=[],o.config.otherCol=[],e.forEach(function(e){"principal"==e.type?o.config.principalCol.push(e):o.config.otherCol.push(e)})}function n(e){return e||a.columns||(a.columns=[]),e&&!a.modalColumns&&(a.modalColumns=[]),e?a.modalColumns:a.columns}var o=this;this.config=a,a.datasource={},a.modalDatasource={},a.urlReplace="0",o.config.principalCol||(o.config.principalCol=[]),o.config.otherCol||(o.config.otherCol=[]),a.condition||(a.condition={group:{operator:"AND",rules:[]}}),a.condition2||(a.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return t.get("/standard").then(function(e){return e.data})},this.getStandardColumns=function(e){return t.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){l(e)})},this.formatLabel=function(e){return a.keys[e]},this.addColumn=function(e){n(e).push({})},this.removeColumn=function(e,t){n(e).splice(t,1)}}function r(e,t,a){function l(e,t){var l=[];angular.forEach(e.columns,function(e,n){if(e.title&&e.path){var o=e.title.replace(/_/," ");o=o.replace(/^bool/,""),t.headers[n]=o,l.push({title:o,path:a(e.path),opt:e.opt})}});var n=e.keys.filter(function(t){return!e.columns.find(function(e){return e.title==t})});return angular.forEach(n,function(e,t){l.push({title:e,path:a(e),opt:"hidden"})}),l}function n(e,t){var n={headers:[],rows:[],itemPerPage:e.itemPerPage};e.keys=[];for(var o in t[0])e.keys.push(o);if(!e.columns||!e.columns.length){e.columns=[];for(var i in t[0])e.columns.push({title:i,path:i,col:null})}var r=t;e.root&&(r=a(e.root)(t));var d=l(e,n);return angular.forEach(r,function(e){var t=[];angular.forEach(d,function(a,l){var n=a.path(e);t[l]={value:n,opt:a.opt,title:a.title}}),n.rows.push(t)}),n.totalItems=n.rows.length,n.columns=e.columns,n.config=e,n}function o(e){return t.get(e.url).then(function(e){return e.data}).then(function(t){return n(e,t)})}function i(e,a){return t.post(a,e).then(function(e){return e.data}).then(function(t){return n(e,t)})}function r(e){var t=null;return"exp"==e.mode?t=i(e,d):"std"==e.mode?t=i(e,s):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),t=o(e)),t}var d="/expert/query",s="/standard/";return{get:r}}angular.module("adf.widget.paginateTable",["adf.provider"]).config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.paginateTable").run(["$templateCache",function(e){e.put("{widgetsPath}/paginateTable/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><div class="form-inline padding-bottom"><input type=checkbox ng-model=config.master id=master> <label for=master>Master</label> <input ng-if="config.mode == \'easy\' || \'expert\'" id=listener type=checkbox ng-model=config.listener> <label ng-if="config.mode == \'easy\' || \'expert\'" for=listener>Slave</label></div><form role=form><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in pt.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=pt.getStandardColumns(config.databaseStandard)></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Colonne</label></div><p>Première configuration automatique</p><div ng-repeat="col in pt.config.columns"><div class="form-inline padding-bottom"><div class=form-group><label class=sr-only for=title-{{$index}}>Title</label> <input type=text id=title-{{$index}} class=form-control placeholder=Title ng-model=col.title required></div><div class=form-group><label class=sr-only for=path-{{$index}}>Path</label> <input type=text id=path-{{$index}} class=form-control placeholder=Path ng-model=col.path required></div><button type=button class="btn btn-warning" ng-click="pt.removeColumn(false, $index)"><i class="fa fa-minus"></i> Remove</button></div><div class="form-inline padding-bottom"><label for=opt-{{$index}}>Booléen</label> <input type=radio id=opt-{{$index}} ng-model=col.opt value=bool> <label for=opt2-{{$index}}>Seuil</label> <input type=radio id=opt2-{{$index}} ng-model=col.opt value=seuil></div><div ng-if="col.opt == \'seuil\'"><p>En DEV</p></div></div><button type=button class="btn btn-primary" ng-click=pt.addColumn(false)><i class="fa fa-plus"></i> Add</button><hr><div><input type=checkbox id=header ng-model=config.head> <label for=header>Cacher l\'en-tête</label></div><div><label>Pagination</label></div><div class=form-group><label class=sr-only for=maxSize>Nombre d\'Elément par Page</label> <input type=text id=maxSize class=form-control placeholder="Nombre d\'élément par pages" ng-model=config.itemPerPage></div><div class=form-group><label ng-click="isCollapsed = !isCollapsed">Paramètre Optionnel <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><div><label for=sample>Modal URL</label><div ng-show=config.modalUrl class="alert alert-info text-center" ng-bind-html=config.modalUrl></div><selecttree model=config.modalDatasource></selecttree></div><div><label for=field>Column to populate</label> <input type=text id=field autocomplete=off uib-typeahead="key for key in config.keys" typeahead-min-length=0 ng-model=pt.config.modalField></div><div><label>Column</label></div><div class="form-inline padding-bottom" ng-repeat="modalCol in pt.config.modalColumns"><div class=form-group><label class=sr-only for=modalTitle-{{$index}} data-placeholder=Titre>Title</label> <input type=text id=modalTitle-{{$index}} class=form-control placeholder=Title ng-model=modalCol.title required></div><div class=form-group><label class=sr-only for=modalPath-{{$index}} data-placeholder=Path>Path</label> <input type=text id=modalPath-{{$index}} class=form-control placeholder=Path ng-model=modalCol.path required></div><button type=button class="btn btn-warning" ng-click="pt.removeColumn(true, $index)"><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=pt.addColumn(true)><i class="fa fa-plus"></i> Add</button></div></form>'),e.put("{widgetsPath}/paginateTable/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/paginateTable/src/view/view.html",'<div><div ng-hide=pt.data class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=pt.data><div ng-if=!pt.data.config.head class=col-md-12><div class="col-md-3 text-center v-cent"><p>Nombre d\'éléments : {{pt.data.rows.length}}</p></div><div class="col-md-3 col-md-offset-6 text-center marg"><button type=button class="btn btn-success" ng-csv=pt.getData() csv-header=pt.getHeader() field-separator=; filename="{{$parent.model.title + \'.csv\'}}"><i class="fa fa-file-excel-o" aria-hidden=true></i> Export</button></div><br></div><div class=text-center><input type=search ng-model=q placeholder=Filter class=form-control></div><div ng-show=!pt.load class=table-responsive><table class=table><tr><th ng-repeat="head in pt.data.headers" ng-click=pt.sortIndex($index)>{{head}}</th></tr><tr ng-repeat="row in filterData = (pt.data.rows | filter:q | orderBy:pt.sorter:pt.reverseSort) | startFrom: (pt.data.currentPage-1)*pt.data.itemPerPage | limitTo:pt.data.itemPerPage track by $index" ng-click=pt.open(row)><td ng-repeat="col in row track by $index" ng-switch=col.opt ng-if="col.opt != \'hidden\'"><span ng-switch-default>{{col.value}}</span><span ng-switch-when=bool ng-if="(col.value != \'0\') && (col.value != \'1\')">{{col.value}}</span> <span ng-switch-when=bool ng-if="col.value == \'0\'"><i class="fa fa-times text-danger"></i></span> <span ng-switch-when=bool ng-if="col.value == \'1\'"><i class="fa fa-check text-success"></i></span><span ng-switch-when=seuil>{{col.value}}</span></td></tr></table></div><div ng-hide=!pt.load class=text-center><i class="fa fa-spinner fa-pulse fa-3x" aria-hidden=true></i></div><div class=text-center ng-if="filterData.length > pt.data.itemPerPage"><ul uib-pagination total-items=filterData.length ng-model=pt.data.currentPage max-size=pt.data.maxSize class=pagination-sm boundary-links=true items-per-page=pt.data.itemPerPage num-pages=numPages></ul></div></div></div>')}]),angular.module("adf.widget.paginateTable").controller("paginateTableController",l),l.$inject=["$scope","$rootScope","data","$uibModal","paginateTableService"],angular.module("adf.widget.paginateTable").service("modalService",n),n.$inject=["$q","$http","$parse"],angular.module("adf.widget.paginateTable").controller("modalInstanceCtrl",o),o.$inject=["data"],angular.module("adf.widget.paginateTable").controller("paginateTableEditController",i),i.$inject=["$scope","$http","config"],angular.module("adf.widget.paginateTable").service("paginateTableService",r),r.$inject=["$q","$http","$parse"],angular.module("adf.widget.paginateTable").filter("startFrom",function(){return function(e,t){if(e&&e.length)return e.slice(t)}})}(window);