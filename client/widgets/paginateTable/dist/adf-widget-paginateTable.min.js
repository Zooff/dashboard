!function(e,t){"use strict";function a(e){e.widget("paginateTable",{title:"Tableau Paginé",description:"Widget permettant d'afficher un tableau paginé",templateUrl:"{widgetsPath}/paginateTable/src/view/view.html",controller:"paginateTableController",controllerAs:"pt",reload:!0,resolve:{data:["paginateTableService","config",function(e,t){return e.get(t)}]},edit:{controller:"paginateTableEditController",controllerAs:"pt",templateUrl:"{widgetsPath}/paginateTable/src/edit/edit.html"}})}function l(e,t,a){var l=this;e&&(this.data=e,this.data.currentPage=1,this.data.maxSize=5,this.orderField=0,this.reverseSort=!1,this.sortIndex=function(e){return l.reverseSort=!l.reverseSort,l.orderField=e},this.sorter=function(e){return e[l.orderField]},l.open=function(){if(cv.data.config.modalUrl){$uibModal.open({templateUrl:"{widgetsPath}/paginateTable/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",resolve:{data:function(e){return e.get(l.configModal)}}})}})}function r(e,t,a){function l(){return a.columns||(a.columns=[]),a.columns}this.config=a,e.getAutocompletion=function(e){return t.get("/api/autocomplete",{params:{val:e}}).then(function(e){return e.data})},this.addColumn=function(){l().push({})},this.removeColumn=function(e){l().splice(e,1)}}function n(e,t,a){function l(e,t){var l=[];return angular.forEach(e.columns,function(e,r){e.title&&e.path&&(t.headers[r]=e.title,l.push({title:e.title,path:a(e.path)}))}),l}function r(e,t){var r={headers:[],rows:[],itemPerPage:e.itemPerPage};if(!e.columns){e.columns=[];for(var n in t[0])e.columns.push({title:n,path:n})}var o=t;e.root&&(o=a(e.root)(t));var i=l(e,r);return angular.forEach(o,function(e){var t=[];angular.forEach(i,function(a,l){var r=a.path(e);t[l]=r}),r.rows.push(t)}),r.totalItems=r.rows.length,r.columns=e.columns,r}function n(e){return t.get(e.url).then(function(e){return e.data}).then(function(t){return r(e,t)})}function o(e){var t=null;return e.expert?t=i(e):e.url&&(t=n(e)),t}function i(e){return t.post(expertUrl,e).then(function(e){return e.data}).then(function(t){return createData(t,e)})}return{get:o}}angular.module("adf.widget.paginateTable",["adf.provider"]).config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.paginateTable").run(["$templateCache",function(e){e.put("{widgetsPath}/paginateTable/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div class=form-group><label for=sample>Datasource</label> <input type=text class=form-control ng-model=config.url placeholder="Enter url" uib-typeahead="address.url as address.url for address in getAutocompletion($viewValue)" typeahead-template-url=autocomplete.html typeahead-loading=load typeahead-no-result=noResults></div><div><label>Columns</label></div><div class="form-inline padding-bottom" ng-repeat="col in pt.config.columns"><div class=form-group><label class=sr-only for=title-{{$index}}>Title</label> <input type=text id=title-{{$index}} class=form-control placeholder=Title ng-model=col.title required></div><div class=form-group><label class=sr-only for=path-{{$index}}>Path</label> <input type=text id=path-{{$index}} class=form-control placeholder=Path ng-model=col.path required></div><button type=button class="btn btn-warning" ng-click=pt.removeColumn($index)><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=pt.addColumn()><i class="fa fa-plus"></i> Add</button><div><label>Pagination</label></div><div class=form-group><label class=sr-only for=maxSize>Item par Page</label> <input type=text id=maxSize class=form-control placeholder="Item Per Page" ng-model=config.itemPerPage></div><div ng-show=isCollapsed><div><label for=sample>Modal URL</label> <input type=text class=form-control ng-model=config.modalUrl placeholder="Modal Url" uib-typeahead="address.url as address.url for address in getAutocompletion($viewValue)" typeahead-template-url=autocomplete.html typeahead-loading=load typeahead-no-result=noResults></div><div><label>Column</label></div><div class="form-inline padding-bottom" ng-repeat="col in cv.config.columns"><div class=form-group><label class=sr-only for=title-{{$index}}>Title</label> <input type=text id=title-{{$index}} class=form-control placeholder=Title ng-model=col.title required></div><div class=form-group><label class=sr-only for=path-{{$index}}>Path</label> <input type=text id=path-{{$index}} class=form-control placeholder=Path ng-model=col.path required></div><button type=button class="btn btn-warning" ng-click=cv.removeColumn($index)><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=cv.addColumn()><i class="fa fa-plus"></i> Add</button></div><div><input type=checkbox ng-model=expert> Expert Mode</div><div ng-show=expert><div class=form-group><label class=sr-only for=database>Database</label> <input type=text id=database class=form-control placeholder=Database ng-model=config.database></div><div class=form-group><label class=sr-only for=query>Query</label> <textarea rows=3 id=query class=form-control placeholder=Query ng-model=config.expert></textarea></div></div></form>'),e.put("{widgetsPath}/paginateTable/src/view/view.html",'<div><div ng-hide=pt.data class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=pt.data><div class=text-center><input type=search ng-model=q placeholder=Filter class=form-control></div><table class=table><tr><th ng-repeat="head in pt.data.headers" ng-click=pt.sortIndex($index)>{{head}}</th></tr><tr ng-repeat="row in filterData = (pt.data.rows | filter:q )| orderBy:pt.sorter:pt.reverseSort| startFrom: (pt.data.currentPage-1)*pt.data.itemPerPage | limitTo:pt.data.itemPerPage track by $index" ng-click=pt.open(row)><td ng-repeat="col in row track by $index">{{col}}</td></tr></table><div class=text-center><ul uib-pagination total-items=filterData.length ng-model=pt.data.currentPage max-size=pt.data.maxSize class=pagination-sm boundary-links=true items-per-page=pt.data.itemPerPage num-pages=numPages></ul></div></div></div>')}]),angular.module("adf.widget.paginateTable").controller("paginateTableController",l),l.$inject=["data","$filter","$scope"],angular.module("adf.widget.paginateTable").controller("paginateTableEditController",r),r.$inject=["$scope","$http","config"],angular.module("adf.widget.paginateTable").service("paginateTableService",n),n.$inject=["$q","$http","$parse"],angular.module("adf.widget.paginateTable").filter("startFrom",function(){return function(e,t){if(e&&e.length)return e.slice(t)}})}(window);