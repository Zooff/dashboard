!function(e,t){"use strict";function a(e){e.widget("paginateTable",{title:"Tableau Paginé",description:"Widget permettant d'afficher un tableau paginé",templateUrl:"{widgetsPath}/paginateTable/src/view/view.html",controller:"paginateTableController",controllerAs:"pt",reload:!0,resolve:{data:["paginateTableService","config",function(e,t){return e.get(t)}]},edit:{controller:"paginateTableEditController",controllerAs:"pt",templateUrl:"{widgetsPath}/paginateTable/src/edit/edit.html"}})}function l(e,t,a,l){var o=this;a&&(this.data=a,this.data.currentPage=1,this.data.maxSize=5,this.orderField=0,this.reverseSort=!1,this.sortIndex=function(e){return o.reverseSort=!o.reverseSort,o.orderField=e},this.sorter=function(e){return e[o.orderField]},o.getData=function(){return o.data.rows},o.getHeader=function(){return o.data.headers},o.open=function(e){if(o.data.config.master&&t.$broadcast("DatTest",e[o.data.config.modalField]),o.data.config.modalDatasource&&(o.data.config.modalUrl=o.data.config.modalDatasource.selected.url),o.data.config.modalUrl){o.data.config.urlReplace=e[o.data.config.modalField];l.open({templateUrl:"{widgetsPath}/paginateTable/src/view/modal.html",controller:"modalInstanceCtrl",controllerAs:"cm",resolve:{data:["modalService",function(e){return e.get(o.data.config)}]}})}})}function o(e,t,a){function l(e,t){var l=[];return angular.forEach(e.modalColumns,function(e,o){e.title&&e.path&&(t.headers[o]=e.title,l.push({title:e.title,path:a(e.path)}))}),l}function o(e,t){var o={headers:[],rows:[]};if(!e.modalColumns){e.modalColumns=[];for(var n in t[0])e.modalColumns.push({title:n,path:n})}var i=t;e.rootData&&(i=a(e.rootData)(t));var r=l(e,o);return angular.forEach(i,function(e){var t=[];angular.forEach(r,function(a,l){var o=a.path(e);t[l]=o}),o.rows.push(t)}),o.totalItems=o.rows.length,o.columns=e.columns,o}function n(e){var a=e.modalUrl.replace(/:\w*/,e.urlReplace);return t.get(a).then(function(e){return e.data}).then(function(t){return o(e,t)})}function i(e){var t=null;return e.modalDatasource&&(e.modalDatasource.selected&&(e.modalUrl=e.modalDatasource.selected.url),t=n(e)),t}return{get:i}}function n(e){var t=this;this.data=e,this.sortIndex=function(e){return t.reverseSort=!t.reverseSort,t.orderField=e},this.sorter=function(e){return e[t.orderField]}}function i(e,t,a){function l(e){n.config.principalCol=[],n.config.otherCol=[],e.forEach(function(e){"principal"==e.type?n.config.principalCol.push(e):n.config.otherCol.push(e)})}function o(e){return e||a.columns||(a.columns=[]),e&&!a.modalColumns&&(a.modalColumns=[]),e?a.modalColumns:a.columns}var n=this;this.config=a,a.datasource={},a.modalDatasource={},n.config.principalCol||(n.config.principalCol=[]),n.config.otherCol||(n.config.otherCol=[]),a.condition||(a.condition={group:{operator:"AND",rules:[]}}),a.condition2||(a.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return t.get("/standard").then(function(e){return e.data})},this.getStandardColumns=function(e){return t.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){l(e)})},this.addColumn=function(e){o(e).push({})},this.removeColumn=function(e,t){o(e).splice(t,1)}}function r(e,t,a){function l(e,t){var l=[];return angular.forEach(e.columns,function(e,o){if(e.title&&e.path){var n=e.title.replace(/_/," ");n=n.replace(/^bool/,""),t.headers[o]=n,l.push({title:n,path:a(e.path)})}}),l}function o(e,t){var o={headers:[],rows:[],itemPerPage:e.itemPerPage};if(!e.columns||!e.columns.length){console.log("FUCK"),e.columns=[];for(var n in t[0])e.columns.push({title:n,path:n})}var i=t;e.root&&(i=a(e.root)(t));var r=l(e,o);return angular.forEach(i,function(e){var t=[];angular.forEach(r,function(a,l){var o=a.path(e);t[l]=o}),o.rows.push(t)}),o.totalItems=o.rows.length,o.columns=e.columns,o.config=e,o}function n(e){return t.get(e.url).then(function(e){return e.data}).then(function(t){return o(e,t)})}function i(e,a){return t.post(a,e).then(function(e){return e.data}).then(function(t){return o(e,t)})}function r(e){var t=null;return"exp"==e.mode?t=i(e,d):"std"==e.mode?t=i(e,s):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),t=n(e)),t}var d="/expert/query",s="/standard/";return{get:r}}angular.module("adf.widget.paginateTable",["adf.provider"]).config(a),a.$inject=["dashboardProvider"],angular.module("adf.widget.paginateTable").run(["$templateCache",function(e){e.put("{widgetsPath}/paginateTable/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><input type=checkbox ng-model=config.master> <label>Master</label><form role=form><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in pt.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=pt.getStandardColumns(config.databaseStandard)></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Colonne</label></div><p>Première configuration automatique</p><div class="form-inline padding-bottom" ng-repeat="col in pt.config.columns"><div class=form-group><label class=sr-only for=title-{{$index}}>Title</label> <input type=text id=title-{{$index}} class=form-control placeholder=Title ng-model=col.title required></div><div class=form-group><label class=sr-only for=path-{{$index}}>Path</label> <input type=text id=path-{{$index}} class=form-control placeholder=Path ng-model=col.path required></div><button type=button class="btn btn-warning" ng-click="pt.removeColumn(false, $index)"><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=pt.addColumn(false)><i class="fa fa-plus"></i> Add</button><div><label>Pagination</label></div><div class=form-group><label class=sr-only for=maxSize>Nombre d\'Elément par Page</label> <input type=text id=maxSize class=form-control placeholder="Item Per Page" ng-model=config.itemPerPage></div><div class=form-group><label ng-click="isCollapsed = !isCollapsed">Paramètre Modal <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><div><label for=sample>Modal URL</label><div ng-show=config.modalUrl class="alert alert-info text-center" ng-bind-html=config.modalUrl></div><selecttree model=config.modalDatasource></selecttree></div><div><label for=field>Column to populate</label><select id=field ng-options="pt.config.columns.indexOf(col) as col.title for col in pt.config.columns" ng-model=pt.config.modalField></select></div><div><label>Column</label></div><div class="form-inline padding-bottom" ng-repeat="modalCol in pt.config.modalColumns"><div class=form-group><label class=sr-only for=modalTitle-{{$index}}>Title</label> <input type=text id=modalTitle-{{$index}} class=form-control placeholder=Title ng-model=modalCol.title required></div><div class=form-group><label class=sr-only for=modalPath-{{$index}}>Path</label> <input type=text id=modalPath-{{$index}} class=form-control placeholder=Path ng-model=modalCol.path required></div><button type=button class="btn btn-warning" ng-click="pt.removeColumn(true, $index)"><i class="fa fa-minus"></i> Remove</button></div><button type=button class="btn btn-primary" ng-click=pt.addColumn(true)><i class="fa fa-plus"></i> Add</button></div></form>'),e.put("{widgetsPath}/paginateTable/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/paginateTable/src/view/view.html",'<div><div ng-hide=pt.data class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=pt.data><div class="col-md-3 text-center v-cent"><p>Nombre d\'éléments : {{pt.data.rows.length}}</p></div><div class="col-md-3 col-md-offset-6 text-center marg"><button type=button class="btn btn-success" ng-csv=pt.getData() csv-header=pt.getHeader() field-separator=; filename="{{$parent.model.title + \'.csv\'}}"><i class="fa fa-file-excel-o" aria-hidden=true></i> Export</button></div><br><div class=text-center><input type=search ng-model=q placeholder=Filter class=form-control></div><div class=table-responsive><table class=table><tr><th ng-repeat="head in pt.data.headers" ng-click=pt.sortIndex($index)>{{head}}</th></tr><tr ng-repeat="row in filterData = (pt.data.rows | filter:q )| orderBy:pt.sorter:pt.reverseSort| startFrom: (pt.data.currentPage-1)*pt.data.itemPerPage | limitTo:pt.data.itemPerPage track by $index" ng-click=pt.open(row)><td ng-repeat="col in row track by $index"><span ng-if="(col != \'0\') && (col != \'1\')">{{col}}</span> <span ng-if="col == \'0\'"><i class="fa fa-times text-danger"></i></span> <span ng-if="col == \'1\'"><i class="fa fa-check text-success"></i></span></td></tr></table></div><div class=text-center><ul uib-pagination total-items=filterData.length ng-model=pt.data.currentPage max-size=pt.data.maxSize class=pagination-sm boundary-links=true items-per-page=pt.data.itemPerPage num-pages=numPages></ul></div></div></div>')}]),angular.module("adf.widget.paginateTable").controller("paginateTableController",l),l.$inject=["$scope","$rootScope","data","$uibModal"],angular.module("adf.widget.paginateTable").service("modalService",o),o.$inject=["$q","$http","$parse"],angular.module("adf.widget.paginateTable").controller("modalInstanceCtrl",n),n.$inject=["data"],angular.module("adf.widget.paginateTable").controller("paginateTableEditController",i),i.$inject=["$scope","$http","config"],angular.module("adf.widget.paginateTable").service("paginateTableService",r),r.$inject=["$q","$http","$parse"],angular.module("adf.widget.paginateTable").filter("startFrom",function(){return function(e,t){if(e&&e.length)return e.slice(t)}})}(window);