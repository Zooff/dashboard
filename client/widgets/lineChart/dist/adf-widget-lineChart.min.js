!function(e,l){"use strict";function o(e){e.widget("lineChart",{title:"Graphique",description:"Widget permettant l'affichage d'histogramme et de courbe",templateUrl:"{widgetsPath}/lineChart/src/view/view.html",controller:"lineChartController",controllerAs:"graph",reload:!0,resolve:{data:["lineChartService","config",function(e,l){return e.get(l)}]},edit:{controller:"lineChartEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/lineChart/src/edit/edit.html"}})}function i(e,l,o,i){if(o){var a=this;this.config=o.config,this.label=o.label,this.value=o.value,this.type=o.type,this.desc=o.desc,this.series=o.series,l.$on("chart-create",function(e,l){a.chart=l}),o.config.listener&&e.$on("DatTest",function(e,l){a.config.urlReplace=l[a.config.slaveValue],a.load=!0,i.get(a.config).then(function(e){a.load=!1,a.label=e.label,a.value=e.value,a.series=e.series})})}this.options={legend:{display:!0,position:"bottom"}},this.config.noPoint&&(this.options.elements={point:{hitRadius:15,hoverRadius:5,radius:0}}),(this.config.minValue||this.config.maxValue||this.config.step)&&(this.options.scales={yAxes:[{display:!0,type:"linear",ticks:{}}]},console.log(this.options)),this.config.minValue&&(this.options.scales.yAxes[0].ticks.min=parseInt(a.config.minValue,10)),this.config.maxValue&&(this.options.scales.yAxes[0].ticks.max=parseInt(a.config.maxValue,10)),this.config.step&&(this.options.scales.yAxes[0].ticks.stepSize=parseInt(a.config.step,10)),a.config.color&&(a.color=[],a.color.push(a.config.color),a.config.color2&&a.color.push(a.config.color2))}function a(e,l,o,i){function a(e){n.config.principalCol=[],n.config.otherCol=[],e.forEach(function(e){"principal"==e.type?n.config.principalCol.push(e):n.config.otherCol.push(e)})}var n=this;this.config=o,o.datasource={},n.config.principalCol||(n.config.principalCol=[]),n.config.otherCol||(n.config.otherCol=[]),o.condition||(o.condition={group:{operator:"AND",rules:[]}}),o.condition2||(o.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return l.get("/standard").then(function(e){return e.data})},this.getColumns=function(e){return l.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){a(e),n.column=e})},this.addLine=function(){o.lines||(o.lines=[]),o.lines.push({})},this.removeLine=function(e){o.lines.splice(e,1)}}function n(e,l,o){function i(e,l){c=[],d=[],l.key=[];var i,a,n;for(var t in e[0])l.key.push(t);l.label||(l.label=l.key[0]),i=o(l.label),l.value||(l.value=l.value),a=o(l.key[1]),c=e.map(function(e){return i(e)});var r=e.map(function(e){return a(e)});if(d.push(r),l.value2){n=o(l.value2);var s=e.map(function(e){return n(e)});d.push(s)}var p=[2,3,5];d.push(p);var u=[8,5,7];return d.push(u),{config:l,label:c,value:d,type:l.type,desc:l.desc,series:[l.value,l.value2]}}function a(e){var o=e.url.replace(/:\w*/,e.urlReplace);return l.get(o).then(function(e){return e.data}).then(function(l){return i(l,e)})}function n(e){var l=null;return"exp"==e.mode?l=t(e,r):"std"==e.mode?l=t(e,s):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),l=a(e)),l}function t(e,o){return l.post(o,e).then(function(e){return e.data}).then(function(l){return i(l,e)})}var r="/expert/query",s="/standard/lineChart",c=[],d=[];return{get:n}}angular.module("adf.widget.lineChart",["adf.provider"]).config(o),o.$inject=["dashboardProvider"],angular.module("adf.widget.lineChart").run(["$templateCache",function(e){e.put("{widgetsPath}/lineChart/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder="Enter Description of the data"></div><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in graph.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=graph.getColumns(config.databaseStandard)></div><div class=form-group><label for=sample>Label</label> <input id=sample type=text class=form-control ng-model=config.columnStandard autocomplete=off uib-typeahead="col as col.name for col in graph.column" typeahead-min-length=0></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><input type=checkbox ng-model=config.listener> <label>Slave</label><div ng-if=config.listener><div class=form-group><label>Master Column</label> <input ng-model=config.slaveValue type=text></div></div><div><label>Graph</label></div><div><label>Label</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label>Value</label></div><div class=form-group><label class=sr-only for=value>Value</label> <input type=text id=value class=form-control ng-model=config.value placeholder="Première Donnée" uib-typeahead="key for key in config.key" typeahead-min-length=0></div><div class=form-group><label class=sr-only for=value2>Value2</label> <input type=text id=value2 class=form-control ng-model=config.value2 placeholder="Seconde Donnée" uib-typeahead="key for key in config.key" typeahead-min-length=0></div><div ng-repeat="line in config.lines"><div class="form-group form-inline padding-bottom"><label class=sr-only for=value2>Value {{$index + 2}}</label> <input type=text id=value2 class=form-control ng-model=line.value placeholder="Donnée {{$index + 3}}" uib-typeahead="key for key in config.key" typeahead-min-length=0> <button type=button class="btn btn-warning" ng-click=graph.removeLine($index)><i class="fa fa-minus"></i> Remove</button></div></div><button type=button class="btn btn-primary" ng-click=graph.addLine()><i class="fa fa-plus"></i> Ajouter une ligne</button><div><label>Type du graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=line>Line</option><option value=bar>Bar</option><option value=horizontalBar>Horizontal Bar</option><option value=radar>Radar</option></select></div><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><input type=checkbox ng-model=config.noPoint><label>No point</label><div class=row><div class=col-md-6><label for=color>Couleur Donnée 1 :</label> <input type=color ng-model=config.color id=color></div><div ng-if=config.value2 class=col-md-6><label for=color2>Couleur Donnée 2 :</label> <input type=color ng-model=config.color2 id=color2></div></div><div ng-repeat="line in config.lines" ng-if="$index % 2 == 0" class=row><div class=col-md-6><label for=color>Couleur Donnée {{$index + 3}} :</label> <input type=color ng-model=config.color id=color></div><div class=col-md-6 ng-if="config.lines.length > $index +1"><label for=color>Couleur Donnée {{$index + 4}} :</label> <input type=color ng-model=config.color id=color></div></div><div class=row><div class=col-md-6><label for=min>Valeur Minimum</label> <input type=text id=min ng-model=config.minValue></div><div class=col-md-6><label for=max>Valeur Maximum</label> <input type=text id=max ng-model=config.maxValue></div></div><label for=step>Step</label> <input type=text id=step ng-model=config.step></div></form>'),e.put("{widgetsPath}/lineChart/src/view/view.html",'<div><div ng-hide=graph.label class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.label><div><canvas id=graph class=chart-base chart-type=graph.type chart-data=graph.value chart-labels=graph.label chart-series=graph.series chart-options=graph.options chart-colors=graph.color></canvas></div><div><p class=text-center>{{graph.desc}}</p></div><my-export chart=graph.chart></my-export></div></div>')}]),angular.module("adf.widget.lineChart").controller("lineChartController",i),i.$inject=["$rootScope","$scope","data","lineChartService"],angular.module("adf.widget.lineChart").controller("lineChartEditController",a),a.$inject=["$scope","$http","config","lineChartService"],angular.module("adf.widget.lineChart").service("lineChartService",n),n.$inject=["$q","$http","$parse"]}(window);