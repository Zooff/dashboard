!function(e,l){"use strict";function i(e){e.widget("lineChart",{title:"Graphique",description:"Widget permettant l'affichage d'histogramme et de courbe",templateUrl:"{widgetsPath}/lineChart/src/view/view.html",controller:"lineChartController",controllerAs:"graph",reload:!0,resolve:{data:["lineChartService","config",function(e,l){return e.get(l)}]},edit:{controller:"lineChartEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/lineChart/src/edit/edit.html"}})}function a(e,l,i,a){if(i){var o=this;if(this.config=i.config,this.label=i.label,this.value=i.value,this.type=i.type,this.desc=i.desc,this.series=i.series,this.config.series=this.series,this.jdata=i.jsonData,l.$on("chart-create",function(e,l){o.chart=l}),i.config.listener&&e.$on("DatTest",function(e,l){o.config.expertReplace=l,o.config.urlReplace=l[o.config.slaveValue],o.load=!0,a.get(o.config).then(function(e){o.load=!1,o.label=e.label,o.value=e.value,o.series=e.series})}),this.options={legend:{display:!0,position:"bottom"},scales:{}},this.config.noPoint&&(this.options.elements={point:{hitRadius:15,hoverRadius:5,radius:0}}),this.config.xAxeType&&(this.options.scales.xAxes=[{type:"time",time:{min:o.label[0],max:o.label[o.label.length-1]},ticks:{maxTicksLimit:15}}]),this.options.scales.yAxes=[{display:!0,type:"linear",ticks:{callback:function(e,l,i){return o.config.axeYSuf?e+o.config.axeYSuf:e}}}],this.config.minValue&&(this.options.scales.yAxes[0].ticks.min=parseInt(o.config.minValue,10)),this.config.maxValue&&(this.options.scales.yAxes[0].ticks.max=parseInt(o.config.maxValue,10)),this.config.step&&(this.options.scales.yAxes[0].ticks.stepSize=parseInt(o.config.step,10)),o.config.color){o.color=[];for(var t in o.config.color)o.color[t]=o.config.color[t]}this.options.onClick=function(e,l){for(var i in this.scales){var a=this.scales[i];if(console.log(a,a.isHorizontal()),a.isHorizontal()){var t=a.getValueForPixel(e.offsetX);console.log(t),console.log(l),o.options.scales.xAxes[0].time.min=t}}},this.getLabel=function(){var e=o.series.slice.unshift("Date");return e},this.getValue=function(){return o.jdata}}}function o(e,l,i,a){function o(e){t.config.principalCol=[],t.config.otherCol=[],e.forEach(function(e){"principal"==e.type?t.config.principalCol.push(e):t.config.otherCol.push(e)})}var t=this;this.config=i,i.datasource={},t.config.principalCol||(t.config.principalCol=[]),t.config.otherCol||(t.config.otherCol=[]),i.condition||(i.condition={group:{operator:"AND",rules:[]}}),i.condition2||(i.condition2={group:{operator:"AND",rules:[]}}),this.getDatabase=function(){return l.get("/standard").then(function(e){return e.data})},this.getColumns=function(e){return l.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){o(e),t.column=e})},this.addLine=function(){i.lines||(i.lines=[]),i.lines.push({})},this.removeLine=function(e){i.lines.splice(e,1)}}function t(e,l,i){function a(e,l){c=[],d=[],l.key=[];var a,o,t;for(var n in e[0])l.key.push(n);l.label||(l.label=l.key[0]),a=i(l.label),l.value||(l.value=l.key[1]),o=i(l.value),c=e.map(function(e){return l.xAxeType?moment(a(e),l.xAxeFormat):a(e)});var r=e.map(function(e){return o(e)});d.push(r);var s=[l.value];if(l.value2){t=i(l.value2);var p=e.map(function(e){return t(e)});d.push(p),s.push(l.value2)}return l.lines&&l.lines.forEach(function(l){var a=i(l.value),o=e.map(function(e){return a(e)});d.push(o),s.push(l.value)}),{config:l,label:c,value:d,type:l.type,desc:l.desc,series:s,jsonData:e}}function o(e){var i=e.url.replace(/:\w*/,e.urlReplace);return l.get(i).then(function(e){return e.data}).then(function(l){return a(l,e)})}function t(e){var l=null;return"exp"==e.mode?l=n(e,r):"std"==e.mode?l=n(e,s):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),l=o(e)),l}function n(e,i){return l.post(i,e).then(function(e){return e.data}).then(function(l){return a(l,e)})}var r="/expert/query",s="/standard/lineChart",c=[],d=[];return{get:t}}angular.module("adf.widget.lineChart",["adf.provider"]).config(i),i.$inject=["dashboardProvider"],angular.module("adf.widget.lineChart").run(["$templateCache",function(e){e.put("{widgetsPath}/lineChart/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder="Enter Description of the data"></div><hr><input type=radio ng-model=config.mode value=easy id=easy> <label for=easy>Mode Facile</label> <input type=radio ng-model=config.mode value=std id=std> <label for=std>Mode Standard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'easy\'"><easy-mode config=config><easy-mode></easy-mode></easy-mode></div><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in graph.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=graph.getColumns(config.databaseStandard)></div><div class=form-group><label for=sample>Label</label> <input id=sample type=text class=form-control ng-model=config.columnStandard autocomplete=off uib-typeahead="col as col.name for col in graph.column" typeahead-min-length=0></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div><showsql type=data config=config></showsql></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><input type=checkbox ng-model=config.listener> <label>Slave</label><div ng-if=config.listener><div class=form-group><label>Master Column</label> <input ng-model=config.slaveValue type=text></div></div><div><label>Graph</label></div><div><label>Label</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label>Value</label></div><div class=form-group><label class=sr-only for=value>Value</label> <input type=text id=value class=form-control ng-model=config.value placeholder="Première Donnée" uib-typeahead="key for key in config.key" typeahead-min-length=0></div><div class=form-group><label class=sr-only for=value2>Value2</label> <input type=text id=value2 class=form-control ng-model=config.value2 placeholder="Seconde Donnée" uib-typeahead="key for key in config.key" typeahead-min-length=0></div><div ng-repeat="line in config.lines"><div class="form-group form-inline padding-bottom"><label class=sr-only for=value2>Value {{$index + 2}}</label> <input type=text id=value2 class=form-control ng-model=line.value placeholder="Donnée {{$index + 3}}" uib-typeahead="key for key in config.key" typeahead-min-length=0> <button type=button class="btn btn-warning" ng-click=graph.removeLine($index)><i class="fa fa-minus"></i> Remove</button></div></div><button type=button class="btn btn-primary" ng-click=graph.addLine()><i class="fa fa-plus"></i> Ajouter une ligne</button><div><label>Type du graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=line>Line</option><option value=bar>Bar</option><option value=horizontalBar>Horizontal Bar</option><option value=radar>Radar</option></select></div><hr><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><input type=checkbox ng-model=config.noPoint><label>No point</label><div><label>Axe X</label></div><input type=checkbox ng-model=config.xAxeType><label>Date</label><div ng-if=config.xAxeType><label>Format des Données</label> <input type=text ng-model=config.xAxeFormat></div><hr><div class=text-center><label>Axe Y</label></div><div class=row><div class=col-md-6><label for=suf class=ctm-label>Suffixe</label> <input id=suf type=text ng-model=config.axeYSuf></div><div class=col-md-6><label class=ctm-label for=step>Step</label> <input type=text id=step ng-model=config.step></div></div><div class=row><div class=col-md-6><label for=min>Valeur Minimum</label> <input type=text id=min ng-model=config.minValue></div><div class=col-md-6><label for=max>Valeur Maximum</label> <input type=text id=max ng-model=config.maxValue></div></div><hr><div><label>Couleur</label></div><div ng-repeat="line in config.series" ng-if="$index % 2 == 0" class=row><div class=col-md-6><label for=color>{{line}} :</label><color-picker ng-model=config.color[$index] options="{required : false, format : \'hexString\'}"></color-picker></div><div class=col-md-6 ng-if="config.series.length > $index +1"><label for=color>{{config.series[$index +1]}} :</label><color-picker ng-model=config.color[$index+1] options="{required : false, format : \'hexString\'}"></color-picker></div></div></div></form>'),e.put("{widgetsPath}/lineChart/src/view/view.html",'<div><div ng-hide=graph.label class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.label><div><canvas id=graph class=chart-base chart-type=graph.type chart-data=graph.value chart-labels=graph.label chart-series=graph.series chart-options=graph.options chart-colors=graph.color></canvas></div><div><p class=text-center>{{graph.desc}}</p></div><my-export chart=graph.chart></my-export><button type=button class="btn btn-success" ng-csv=graph.getValue() csv-header=graph.getLabel() field-separator=; filename="{{$parent.model.title + \'.csv\'}}"><i class="fa fa-file-excel-o" aria-hidden=true></i></button></div></div>')}]),angular.module("adf.widget.lineChart").controller("lineChartController",a),a.$inject=["$rootScope","$scope","data","lineChartService"],angular.module("adf.widget.lineChart").controller("lineChartEditController",o),o.$inject=["$scope","$http","config","lineChartService"],angular.module("adf.widget.lineChart").service("lineChartService",t),t.$inject=["$q","$http","$parse"]}(window);