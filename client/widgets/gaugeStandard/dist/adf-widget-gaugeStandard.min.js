!function(e,a){"use strict";function t(e){e.widget("gaugeStandard",{title:"Compteur (Standard)",description:"Widget permettant l'affichage d'un compteur",templateUrl:"{widgetsPath}/gaugeStandard/src/view/view.html",controller:"gaugeStandardController",controllerAs:"graph",reload:!0,resolve:{data:["gaugeStandardService","config",function(e,a){return e.get(a)}]},edit:{controller:"gaugeStandardEditController",controllerAs:"graph",templateUrl:"{widgetsPath}/gaugeStandard/src/edit/edit.html"}})}function n(e,a,t){function n(e,a){var n=[];return angular.forEach(e.columns,function(e,o){if(e.title&&e.path){var l=e.title.replace(/_/," ");l=l.replace(/^bool/,""),a.headers[o]=e.title,n.push({title:e.title,path:t(e.path)})}}),n}function o(e,a){var o={headers:[],rows:[]};if(!e.columns){e.columns=[];for(var l in a[0])e.columns.push({title:l,path:l})}var i=a;e.rootData&&(i=t(e.rootData)(a));var r=n(e,o);return angular.forEach(i,function(e){var a=[];angular.forEach(r,function(t,n){var o=t.path(e);a[n]=o}),o.rows.push(a)}),o.totalItems=o.rows.length,o.columns=e.columns,e.condition.group.rules.pop(),o}function l(e){return a.post("/standard",e).then(function(e){return e.data}).then(function(a){return o(e,a)})}return{fetch:l}}function o(e){var a=this;this.data=e,this.sortIndex=function(e){return a.reverseSort=!a.reverseSort,a.orderField=e},this.sorter=function(e){return e[a.orderField]}}function l(e,a,t,n,o){if(a){var l=this;this.config=a.config,this.data=a.data,this.label=a.label,this.desc=a.desc,a.config.listener&&n.$on("DatTest",function(e,a){l.config.urlReplace=a,l.load=!0,t.get(l.config).then(function(e){l.load=!1,l.label=e.label,l.value=e.value})})}}function i(e,a,t,n){function o(e){e.forEach(function(e){"principal"==e.type?l.config.principalCol.push(e):l.config.otherCol.push(e)})}var l=this;this.config=t,t.datasource={},l.config.principalCol||(l.config.principalCol=[]),l.config.otherCol||(l.config.otherCol=[]),t.condition||(t.condition={group:{operator:"AND",rules:[]}}),t.condition2||(t.condition2={group:{operator:"AND",rules:[]}}),this.getDatabaseExpert=function(){return a.get("/expert").then(function(e){return e.data})},this.getDatabase=function(){return a.get("/standard").then(function(e){return e.data})},this.getColumns=function(e){return a.get("/standard/columns",{params:{val:e}}).then(function(e){return e.data}).then(function(e){console.log(e),o(e)})}}function r(e,a,t){function n(e,a){return{config:a,data:e[0]}}function o(e){var t=e.url.replace(/:\w*/,e.urlReplace);return a.get(t).then(function(e){return e.data}).then(function(a){return n(a,e)})}function l(e){var a=null;return"std"==e.mode?a=i(e,r):"easy"==e.mode&&(e.datasource.selected&&(e.url=e.datasource.selected.url),a=o(e)),a}function i(e,t){return a.post(t,e).then(function(e){return e.data}).then(function(a){return n(a,e)})}var r="/standard/gauge";return{get:l}}angular.module("adf.widget.gaugeStandard",["adf.provider"]).config(t),t.$inject=["dashboardProvider"],angular.module("adf.widget.gaugeStandard").run(["$templateCache",function(e){e.put("{widgetsPath}/gaugeStandard/src/edit/edit.html",'<script type=text/ng-template id=autocomplete.html><a> <span ng-bind-html="match.model.url | uibTypeaheadHighlight:query"></span> | <small ng-bind-html="match.model.desc | uibTypeaheadHighlight:query"></small> </a></script><form role=form><div><label>Description</label></div><div class=form-group><label class=sr-only for=desc>Description</label> <input type=text id=desc class=form-control ng-model=config.desc placeholder=Description></div><hr><input type=radio ng-model=config.mode value=std id=easy> <label for=easy>Mode Stadard</label> <input type=radio ng-model=config.mode value=exp id=exp> <label for=exp>Mode Expert</label><div class=form-group ng-if="config.mode == \'std\'"><div class=form-group><label for=sample>Datasources</label> <input id=sample type=text class=form-control ng-model=config.databaseStandard placeholder="Type du Check" autocomplete=off uib-typeahead="database for database in graph.getDatabase($viewValue)" typeahead-min-length=0 typeahead-on-select=graph.getColumns(config.databaseStandard)></div><div class=form-group><label for=standardTest>Condition :</label></div><p ng-hide=config.principalCol.length>Choissisez une datasource !</p><div ng-if=config.principalCol.length><label><small>Choix de la Référence</small></label><query-builder group=config.condition.group fields=config.principalCol database=config.databaseStandard></query-builder></div><div ng-if="config.condition.group.rules[0] && config.condition.group.rules[0].data"><label><small>SEC</small></label><query-builder group=config.condition2.group fields=config.otherCol database=config.databaseStandard></query-builder></div></div><div ng-if="config.mode == \'exp\'"><expert-mode config=config></expert-mode></div><hr><div><label>Configuration du Graph</label></div><input ng-if="config.mode == \'easy\'" id=listener type=checkbox ng-model=config.listener> <label ng-if="config.mode == \'easy\'" for=listener>Slave</label><div><label>Type de Graph</label></div><div class=form-group><label class=sr-only for=sample>Chart Type</label><select class=form-control ng-model=config.type><option value=arch>Arch</option><option value=semi>Semi</option><option value=full>Full</option></select></div><div><label>Label (Configuration Automatique)</label></div><div class=form-group><label class=sr-only for=label>Label</label> <input type=text id=label class=form-control ng-model=config.label placeholder=Label uib-typeahead="key for key in config.key" typeahead-min-length=0 autocomplete=off></div><div><label ng-click="isCollapsed = !isCollapsed">Chart Option <span ng-hide=isCollapsed class="glyphicon glyphicon-triangle-bottom" aria-hidden=true></span> <span ng-show=isCollapsed class="glyphicon glyphicon-triangle-top" aria-hidden=true></span></label></div><div ng-show=isCollapsed><label for=append>Unité</label> <input type=text class=form-control id=append ng-model=config.append placeholder="GB, Mo, etc..."> <label for=min>Valeur Minimum</label> <input type=text class=form-control id=min ng-model=config.min placeholder=0></div></form>'),e.put("{widgetsPath}/gaugeStandard/src/view/modal.html","<modal-table data=cm.data></modal-table>"),e.put("{widgetsPath}/gaugeStandard/src/view/view.html",'<div><div ng-hide=graph.data class="alert alert-info" role=alert>Please insert a url to the widget configuration</div><div ng-show=graph.data>{{config.urlReplace}}<div class=text-center><ng-gauge type={{graph.config.type}} size=200 thick=5 value=graph.data.servers.length cap=round label={{graph.config.label}} append={{graph.config.append}} min=graph.config.min max=graph.data.max></ng-gauge></div><div class=text-center><p>{{graph.config.desc}}</p></div></div></div>')}]),angular.module("adf.widget.pieChart").service("modalServicePC",n),n.$inject=["$q","$http","$parse"],angular.module("adf.widget.pieChart").controller("modalInstanceCtrl",o),o.$inject=["data"],angular.module("adf.widget.gaugeStandard").controller("gaugeStandardController",l),l.$inject=["$scope","data","gaugeStandardService","$rootScope","$uibModal"],angular.module("adf.widget.gaugeStandard").controller("gaugeStandardEditController",i),i.$inject=["$scope","$http","config","gaugeStandardService"],angular.module("adf.widget.gaugeStandard").service("gaugeStandardService",r),r.$inject=["$q","$http","$parse"]}(window);